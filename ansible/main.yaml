---
- name: Setup wireguard
  hosts: all
  become: true

  tasks:
  - name: Install wireguard
    ansible.builtin.apt:
      name: "wireguard"
      state: present
      update_cache: true
      cache_valid_time: 7200

  - name: Generate private server key
    ansible.builtin.shell:
      chdir: /root
      creates: /root/wg.key
      cmd: |
        umask 077
        wg genkey >wg.key

  - name: Generate public server key
    ansible.builtin.shell:
      chdir: /root
      creates: /root/wg.pub
      cmd: |
        umask 077
        wg pubkey <wg.key >wg.pub

  - name: Slurp server private key
    ansible.builtin.slurp:
      src: /root/wg.key
    register: private_key

  - name: Generate users private keys
    with_lines: 
    - cat ../users.txt
    ansible.builtin.shell:
      chdir: /root
      creates: /root/wg-{{ item }}.key
      cmd: |
        umask 077
        wg genkey >wg-{{ item }}.key

  - name: Generate users public keys
    with_lines: 
    - cat ../users.txt
    ansible.builtin.shell:
      chdir: /root
      creates: /root/wg-{{ item }}.pub
      cmd: |
        umask 077
        wg pubkey <wg-{{ item }}.key >wg-{{ item }}.pub

  - name: Slurp user pubkeys
    with_lines: 
    - cat ../users.txt
    ansible.builtin.slurp:
      src: "/root/wg-{{ item }}.pub"
    register: users

  - name: Generate wg-quick config
    ansible.builtin.template:
      src: wg0.conf.j2
      dest: /etc/wireguard/wg0.conf
    notify:
    - Reload wireguard

  - name: Enable ipv4 forwarding
    ansible.builtin.shell:
      chdir: /etc/sysctl.d
      creates: /etc/sysctl.d/ipv4forwarding.conf
      cmd: |
        echo -n "net.ipv4.ip_forward=1" >ipv4forwarding.conf
        sysctl -p /etc/sysctl.d/ipv4forwarding.conf

  - name: Start wireguard service
    ansible.builtin.systemd:
      name: "wg-quick@wg0"
      state: started
      enabled: true

  handlers:
  - name: Reload wireguard
    ansible.builtin.service:
      name: "wg-quick@wg0"
      state: reloaded
